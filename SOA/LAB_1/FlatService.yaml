openapi: 3.0.3
info:
  title: Flat service REST endpoints
  description: Flat service REST endpoints for SOA Lab_1
  version: 1.0.0
servers:
  - url: 'https://localhost:45382/api/v1'
paths:
  # CRUD
  /catalog/flats:
    get:
      summary: Get list of flats
      description: Get list of flats
      operationId: getFlats
      parameters:
        - name: sort
          in: query
          description: Array of fields that are used for sorting. The "-" sign means sorting in descending order. If queries and deletion order are provided for one field (with and without "-"), an error response will be returned.
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              default: id
              enum:
                - id
                - name
                - creationDate
                - coordinates.x
                - coordinates.y
                - area
                - numberOfRooms
                - floor
                - timeToMetroOnFoot
                - view
                - house.name
                - house.year
                - house.numberOfFloors
                - -id
                - -name
                - -creationDate
                - -coordinates.x
                - -coordinates.y
                - -area
                - -numberOfRooms
                - -floor
                - -timeToMetroOnFoot
                - -view
                - -house.name
                - -house.year
                - -house.numberOfFloors
        - name: filter
          in: query
          required: false
          description: Array of fields used for filtering. Each element must contain the name of the field and the filtering method in parentheses, as well as the value that will be used for filtering. If the value type is incorrect, an error response will be returned.
          schema:
            type: array
            items:
              type: string
              example: id[eq]=1
              pattern: '^(id|name|creationDate|coordinates\.x|coordinates\.y|area|numberOfRooms|floor|timeToMetroOnFoot|view|house\.name|house\.year|house\.numberOfFloors)\[(eq|ne|gt|lt|lte|gte)\]=.+$'
          style: deepObject
          explode: true
        - name: page
          in: query
          required: false
          description: Specifies the page number to be paginated. If used without the "pageSize" parameter, the page size will be 10. If none of the parameters "page" or "pageSize" is used, then all Flats will be returned.
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          description: The specified page size for pagination. If used without the "page" parameter, the first page will be displayed. If none of the parameters "page" or "pageSize" is used, then all Flats will be returned.
          schema:
            type: integer
            default: 10
            minimum: 1
      tags:
        - Catalog
      responses:
        '200':
          description: Returns an array of flats based on the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatsAllFieldsSchema'
        '400':
            description: Invalid query param
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                format: int32
                                example: 400
                            message:
                                type: string
                                example: Invalid query param value
                            time:
                                type: string
                                format: date-time
                                example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new flat
      description: Add new flat
      operationId: addFlat
      tags:
        - Catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatExtraFieldSchema'
      responses:
        '200':
          description: Returns the flat that was just added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatAllFieldsSchema'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Price должен быть больше 0!
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 405
                  message:
                    type: string
                    example: Validation exception
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /catalog/flats/{id}:
    get:
      summary: Get existing flat by id
      description: Get existing flat by id
      operationId: getFlat
      parameters:
        - name: id
          in: path
          required: true
          description: Flat id to find
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Catalog
      responses:
        '200':
          description: Returns flat by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatAllFieldsSchema'
        '400':
          description: Invalid param supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid param supplied
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update existing flat by id
      description: Update existing flat by id
      operationId: updateFlat
      parameters:
        - name: id
          in: path
          required: true
          description: Flat id to update
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatExtraFieldSchema'
      responses:
        '200':
          description: Returns an updated flat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatAllFieldsSchema'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Price должен быть больше 0!
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 405
                  message:
                    type: string
                    example: Validation exception
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete existing flat by id
      description: Delete existing flat by id
      operationId: deleteFlat
      parameters:
        - name: id
          in: path
          required: true
          description: Flat id to delete
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Catalog
      responses:
        '204':
          description: The flat was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 204
                  message:
                    type: string
                    example: The flat was successfully deleted
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid id value
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Extra operations
  /catalog/flats/delete-one-by-view/{view}:
    delete:
      summary: Delete one Flat whose value is equivalent to View
      description: Delete one object whose value is equivalent to View
      operationId: deleteOneFlatByView
      parameters:
        - name: view
          in: path
          required: true
          description: Flat view to delete
          schema:
            items:
              $ref: '#/components/schemas/View'
      tags:
        - Catalog
      responses:
        '204':
          description: The flat was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 204
                  message:
                    type: string
                    example: The flat was successfully deleted
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '400':
          description: Invalid view value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid view value
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /catalog/flats/average-time-metro:
    get:
      summary: Get average time to metro by foot for all flats
      description: Get average time to metro by foot for all flats
      operationId: getFlatsAverageTimeToMetroOnFoot
      tags:
        - Catalog
      responses:
        '200':
          description: Returns the average value of the time to the metro by foot
          content:
            application/json:
              schema:
                type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /catalog/flats/unique-view:
    get:
      summary: Get a list of unique View values for all Flats
      description: Get a list of unique View values for all Flats
      operationId: getUniqueFlatsView
      tags:
        - Catalog
      responses:
        '200':
          description: Returns list of unique View values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

# Models
components:
  schemas:
    View:
      type: string
      enum:
        - STREET
        - PARK
        - BAD
        - GOOD
        - TERRIBLE
      nullable: true
      example: STREET
    House:
      type: object
      properties:
        name:
          type: string
          example: My House
          nullable: true
        year:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
          example: 1999
        numberOfFloors:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
          example: 8
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int32
          nullable: false
        y:
          type: number
          format: float
          nullable: false
    FlatExtraFieldSchema:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: My Flat
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        area:
          type: integer
          format: int32
          nullable: true
          minimum: 0
          exclusiveMinimum: true
          example: 70
        numberOfRooms:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
          example: 3
        floor:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
          example: 8
        timeToMetroOnFoot:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
          example: 10
        view:
          $ref: '#/components/schemas/View'
        house:
          $ref: '#/components/schemas/House'
        price:
          type: number
          format: double
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 666666
        balcony:
          type: boolean
          nullable: false
          example: true
    FlatAllFieldsSchema:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              minimum: 0
              exclusiveMinimum: true
              example: 1
              description: unique identifier of flat
            date:
              type: string
              format: date-time
              nullable: false
              example: 2022-09-19T00:00:10Z
        - $ref: '#/components/schemas/FlatExtraFieldSchema'
    FlatsAllFieldsSchema:
      type: object
      properties:
        flatGetResponseDtos:
          type: array
          items:
            $ref: '#/components/schemas/FlatAllFieldsSchema'
        page:
          type: integer
          default: null
        pageSize:
          type: integer
          default: null
        totalPages:
          type: integer
          default: null
        totalCound:
          type: integer
          default: null
    Error:
      type: object
      required:
        - httpCode
        - message
        - time
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Not Found
        time:
          type: string
          format: date-time
          example: 2022-09-19T00:00:09Z
  
