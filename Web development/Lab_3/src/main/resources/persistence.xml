<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                                 http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
             version="1.0">

    <persistence-unit name="Data" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>model.Dot</class>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver" /> <!-- DB Driver -->
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/postgres" /> <!-- BD Mane -->
            <property name="javax.persistence.jdbc.user" value="postgres" /> <!-- DB User -->
            <property name="javax.persistence.jdbc.password" value="Я вижу пароль, я вижу ориентир" /> <!-- DB Password -->

            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL95Dialect"/> <!-- DB Dialect -->
            <property name="hibernate.hbm2ddl.auto" value="update" /> <!-- create / create-drop / update -->

        </properties>
    </persistence-unit>
</persistence>


<!--
* hibernate.connection.url – тут указываем URL к базе;
* hibernate.connection.username – имя пользователя этой базы;
* hibernate.connection.password – и его пароль;
* hibernate.dialect – тут мы устанавливаем диалект текущей БД, он дает возможность использовать возможность
  генерации ключей, он автоматизирует всю эту работу;
* hibernate.hbm2ddl.auto – тут статус работы JPA:
* update – база будет просто обновлять свою структуру;
* validate – проверяет структуру базы но не вносит изменения;
* create – создает таблицы, но уничтожает предыдущие данные;
* create-drop – создает таблицы в начале сеанса и удаляет их по окончанию сеанса.-->